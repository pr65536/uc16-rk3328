arch=arm
board=rock64
cpu=armv8
soc=rk3328
vendor=rockchip
os_type=linux
initrd_high=0xffffffff
fdt_high=0xffffffff
mmcdev=1
mmcpart=4
bootpart=1:4
kernel_addr=0x02000000
initrd_addr=0x04000000
fdt_addr=0x01f00000

kernel_file=kernel.img
initrd_file=initrd.img
fdtfile=rk3328-env.dtb

# functions to load kernel, initrd and fdt from various env values
loadfiles=run loadkernel; run loadinitrd; run loadfdt
loadkernel=fatload mmc ${mmcdev}:${mmcpart} ${kernel_addr} ${snap_kernel}/${kernel_file}
loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${snap_kernel}/dtbs/${fdtfile}
loadinitrd=fatload mmc ${mmcdev}:${mmcpart} ${initrd_addr} ${snap_kernel}/${initrd_file}; setenv initrd_size ${filesize}

# if we're trying a new version, check if stamp file is already there to revert
# to other version
snappy_boot=if test "${snap_mode}" = "try"; then setenv snap_mode "trying"; saveenv; setenv snap_core "${snap_try_core}"; setenv snap_kernel "${snap_try_kernel}"; elif test "${snap_mode}" = "trying"; then setenv snap_mode ""; saveenv; fi; run loadfiles; setenv mmcroot "/dev/disk/by-label/writable ${snappy_cmdline} snap_core=${snap_core} snap_kernel=${snap_kernel}"; run mmcargs; bootz ${kernel_addr} ${initrd_addr}:${initrd_size} ${fdt_addr}

snappy_cmdline=net.ifnames=0 init=/lib/systemd/systemd ro panic=-1 fixrtc
snap_mode= 

mmcrootfstype=ext4 rootwait
mmcargs=setenv bootargs root=${mmcroot} rootfstype=${mmcrootfstype}
uenvcmd=run snappy_boot
mmcboot=echo "boot from mmc card ..."; run uenvcmd;
